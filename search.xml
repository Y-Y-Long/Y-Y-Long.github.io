<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ctfshow做题记录</title>
      <link href="/2023/04/07/ctfshow%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/04/07/ctfshow%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ctfshow-vip题目限免wp"><a href="#ctfshow-vip题目限免wp" class="headerlink" title="ctfshow vip题目限免wp"></a>ctfshow vip题目限免wp</h1><h2 id="1-源码泄露"><a href="#1-源码泄露" class="headerlink" title="1.源码泄露"></a>1.源码泄露</h2><p>打开之后只看到了一句web1:where is flag?根据题目中说是源码泄露，直接右键查看源代码，在源代码的末尾位置看到了flag<br><img src="https://img-blog.csdnimg.cn/e3061e62832d440a9b02518b22c82d13.png" alt="在这里插入图片描述"></p><h2 id="2-前台JS绕过"><a href="#2-前台JS绕过" class="headerlink" title="2.前台JS绕过"></a>2.前台JS绕过</h2><p>打开题目链接后，发现一句“无法查看源代码”，此时发现鼠标的右键也是被禁用的，于是打开了浏览器的控制台，在元素中发现了flag<br><img src="https://img-blog.csdnimg.cn/19af8e3a1a2947d68b14cfee6c5ff70e.png" alt="在这里插入图片描述"></p><h2 id="3-协议头信息泄露"><a href="#3-协议头信息泄露" class="headerlink" title="3.协议头信息泄露"></a>3.协议头信息泄露</h2><p>根据题目中说是协议头信息泄露，于是直接f12，在控制台的网络中按ctrl+r进行刷新，最后在标头的响应头中发现flag<br><img src="https://img-blog.csdnimg.cn/d92081dac3d84d859c6e724759a68cdb.png" alt="在这里插入图片描述"></p><h2 id="4-robots后台泄露"><a href="#4-robots后台泄露" class="headerlink" title="4.robots后台泄露"></a>4.robots后台泄露</h2><p>首先看题目是跟robots有关，于是在网址的后面加上后缀&#x2F;robots.txt，然后发现这样一个东西<br><img src="https://img-blog.csdnimg.cn/0fe9fa43b4814e60a72e89eaf9f450f8.png" alt="在这里插入图片描述"><br>然后把这个东西复制到网址的后面，就可以得到flag了<br><img src="https://img-blog.csdnimg.cn/f93229289eaa4cc285b00c3f54e7e7d3.png" alt="在这里插入图片描述"></p><h2 id="5-phps源码泄露"><a href="#5-phps源码泄露" class="headerlink" title="5.phps源码泄露"></a>5.phps源码泄露</h2><p>根据题目提示，首先想到的就是要去查看php的源码，于是在网址的后面加上&#x2F;index.phps查看源码，输入后php源码被下载下来了，用记事本打开后发现了flag<br><img src="https://img-blog.csdnimg.cn/9854d183f6684d0781d734d5cb9bf42e.png" alt="在这里插入图片描述"></p><h2 id="6-源码压缩包泄露"><a href="#6-源码压缩包泄露" class="headerlink" title="6.源码压缩包泄露"></a>6.源码压缩包泄露</h2><p>根据题目推测，网页中应该有压缩包可以下载下来，输入<a href="http://www.zip,下载压缩包,发现说flag在fl000g.txt/">www.zip，下载压缩包，发现说flag在fl000g.txt</a><br><img src="https://img-blog.csdnimg.cn/ac6d157590574c4f99d6df6bfa8a846a.png" alt="在这里插入图片描述"><br>于是在网址的最后加上fl000g.txt，得到flag</p><h2 id="7-版本控制泄露源码"><a href="#7-版本控制泄露源码" class="headerlink" title="7.版本控制泄露源码"></a>7.版本控制泄露源码</h2><p>根据题目的版本控制，在网页上搜了一下相关的信息<br><img src="https://img-blog.csdnimg.cn/f281b64c35a249e094e00df59c6d58f2.png" alt="在这里插入图片描述"><br>根据搜索，我在网址末加上了一个&#x2F;.git，于是就得到了flag</p><h2 id="8-版本控制泄露源码2"><a href="#8-版本控制泄露源码2" class="headerlink" title="8.版本控制泄露源码2"></a>8.版本控制泄露源码2</h2><p>根据第七题的经验，版本控制信息除了git还有svn，于是在网址后加了一个&#x2F;.svn，于是就得到了flag</p><h2 id="9-vim临时文件泄露"><a href="#9-vim临时文件泄露" class="headerlink" title="9.vim临时文件泄露"></a>9.vim临时文件泄露</h2><p>通过搜索vim临时文件发现，他是一个swp文件，在网址的后面输入index.phps.swp即可下载文件，下载之后通过使用记事本打开，即可得到flag</p><h2 id="10-cookie泄露"><a href="#10-cookie泄露" class="headerlink" title="10.cookie泄露"></a>10.cookie泄露</h2><p>在之前曾经做过有关cookie的题目，所以首先我们需要找到本网页的cookie，于是我按下f12，在网络-文档中进行ctrl+r刷新查找cookie<br><img src="https://img-blog.csdnimg.cn/8182425351e74a1093ac9748e5a22a41.png" alt="在这里插入图片描述"><br>发现flag是一串这样的东西，但是输入后并不对，然后把%7B和%7D换成{}提交正确</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github博客的搭建以及butterfly主题的安装</title>
      <link href="/2023/02/12/hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8Abutterfly%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2023/02/12/hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8Abutterfly%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo-github博客的搭建以及butterfly主题的安装"><a href="#hexo-github博客的搭建以及butterfly主题的安装" class="headerlink" title="hexo+github博客的搭建以及butterfly主题的安装"></a>hexo+github博客的搭建以及butterfly主题的安装</h1><h2 id="一、下载安装git和node-js"><a href="#一、下载安装git和node-js" class="headerlink" title="一、下载安装git和node.js"></a>一、下载安装git和node.js</h2><p>安装之前我先在电脑的E盘中建立了一个文件夹用来存放下载博客过程中所需要的一些文件，大家可以将后续安装的node.js以及git都放在这个文件夹中，大家也可以根据自己的需要进行相应的调整。</p><h3 id="1-1安装node-js"><a href="#1-1安装node-js" class="headerlink" title="1.1安装node.js"></a>1.1安装node.js</h3><p>首先我们打开&#x3D;&#x3D;node&#x3D;&#x3D;的官网,根据自己的需要选择所需要的版本进行下载，这里我选择的是图片上标注的这个版本。<br><strong>注意：所下载的node版本一定要与自己的电脑系统相配，否则后面会出现一系列的问题。</strong><br>官网地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p><img src="https://img-blog.csdnimg.cn/00e8244107414dec94b855c7ed21b6b1.png" alt="在这里插入图片描述"><br>下载时我们可以自定义安装，我是把后续的Git和node全部安装在了一个文件夹中，包括后面的hexo的主题文件，因为我觉得放在一个文件夹中比较好处理。</p><h3 id="1-2安装Git"><a href="#1-2安装Git" class="headerlink" title="1.2安装Git"></a>1.2安装Git</h3><p>同样我们要先下载git在进行安装。<br>Git下载地址：<a href="https://gitforwindows.org/">https://gitforwindows.org/</a><br>至于安装git的详细步骤，因为在安装的过程中并没有截图，所以大家可以自行百度<strong>Git的安装步骤</strong>每一篇文章的安装步骤都很详细。</p><p>在安装成功之后大家右键文件夹，点击<strong>显示更多选项</strong>会出现git开头的两个选项。<br><img src="https://img-blog.csdnimg.cn/104064208a2b493690714c86c156ed35.png" alt="在这里插入图片描述"><br>到这里，我们的两个工具node.js和git就已经安装结束了。</p><h2 id="二、注册github账号"><a href="#二、注册github账号" class="headerlink" title="二、注册github账号"></a>二、注册github账号</h2><h3 id="2-1注册github"><a href="#2-1注册github" class="headerlink" title="2.1注册github"></a>2.1注册github</h3><p>我们博客的搭建还需要我们拥有一个github的账号，首先我们先进入github的官网。<br><strong>github官网地址：<a href="https://github.com/">https://github.com/</a></strong><br>然后我们点击右上角的sign up进行账号注册<br><img src="https://img-blog.csdnimg.cn/f74a41e9d2db47fba55b56dde9174ad4.png" alt="在这里插入图片描述"></p><p>然后我们依次根据网页中的提示输入<strong>邮箱，用户名，密码</strong>等信息完成注册。</p><p><strong>（github账号注册之后用户名的修改很麻烦，所以建议大家用一个自己比较容易记并且比较常用的用户名，以后也方便自己的登录。）</strong></p><h3 id="2-2创建github仓库"><a href="#2-2创建github仓库" class="headerlink" title="2.2创建github仓库"></a>2.2创建github仓库</h3><p>完成注册之后登录自己的账号，点击右上角的加号，然后点击<strong>New repository</strong>进行仓库的创建。<br><img src="https://img-blog.csdnimg.cn/97bab5c7cb064b659c641fc0071a30dd.png" alt="在这里插入图片描述"></p><p>之后开始填写仓库的信息，填写完之后点击下面的&#x3D;&#x3D;Create repository&#x3D;&#x3D;，然后我们的仓库就创建完成了。</p><p>&#x3D;&#x3D;注&#x3D;&#x3D;：我们的仓库用户名的格式为  <strong>github用户名+github.io</strong>  这也是我们以后进入博客的网址。</p><p><img src="https://img-blog.csdnimg.cn/1cc9f6170dfc4cd1af6aad8791f57230.jpeg" alt="在这里插入图片描述"></p><h3 id="2-3配置环境"><a href="#2-3配置环境" class="headerlink" title="2.3配置环境"></a>2.3配置环境</h3><p>我们打开之前安装的<strong>Git Bash</strong>，找不到的话可以在电脑中搜索进行打开<br><img src="https://img-blog.csdnimg.cn/1d76bfbd95304ce4939725e3e0e27f55.png" alt="在这里插入图片描述"></p><p>打开后如图 </p><p><img src="https://img-blog.csdnimg.cn/1acf3beef1d34a6a94007da4be7c5f8c.png" alt="在这里插入图片描述"><br>然后我们开始进行环境配置<br>输入命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="variable language_">global</span> user.<span class="property">name</span> <span class="string">&quot;你的github用户名&quot;</span></span><br><span class="line"></span><br><span class="line">git config --<span class="variable language_">global</span> user.<span class="property">email</span> <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>完成这一步之后我们再查看所有的配置<br>输入命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -l</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/96a4590d25314ae080cddd417d91878b.png" alt="在这里插入图片描述"><br>当配置的最后出现自己的用户名和邮箱的时候，说明我们已经配置环境成功</p><h3 id="2-4连接github"><a href="#2-4连接github" class="headerlink" title="2.4连接github"></a>2.4连接github</h3><p>在我们的电脑c盘中我们可以找到一个 .ssh 文件夹，这里面的<strong>id_rsa</strong>是我们电脑的私钥，<strong>id_rsa.pub</strong>是我们电脑的公钥，我们打开我们的<strong>id_rsa.pub</strong>（可以用记事本打开），复制文件中的内容，然后在github中配置ssh秘钥<br><img src="https://img-blog.csdnimg.cn/4a69c8fe8f9e4373a9b393b772e52879.png" alt="在这里插入图片描述"><br>我们再次进入github网页中，点击右上角头像选择  <strong>setting</strong> ，然后在页面的左侧找到  <strong>SSH and GPG keys</strong>  ，<strong>Title</strong>中随便输入一个名字，<strong>Key</strong>中输入复制的公钥，最后点击  <strong>Add SSH Key</strong><br><img src="https://img-blog.csdnimg.cn/1d860336cea147158408eebb7d358b6a.png" alt="在这里插入图片描述"><br>最后我们打开<strong>Git Bash</strong>，输入命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.<span class="property">com</span></span><br></pre></td></tr></table></figure><p>最后出现如下图这种情况就说明我们的github已经连接完成啦！</p><p><img src="https://img-blog.csdnimg.cn/2c52556b35464a2f9b970d2522a66aee.png" alt="在这里插入图片描述"></p><h2 id="三、安装hexo"><a href="#三、安装hexo" class="headerlink" title="三、安装hexo"></a>三、安装hexo</h2><p>首先我们在存放node.js和git的文件夹中新建一个文件夹（我命名为myblog，大家可以根据个人喜好自行命名）<br><img src="https://img-blog.csdnimg.cn/895df72ba4d64cabb29ff19d1373e964.png"><br>右键<strong>myblog文件夹</strong>，选择<strong>Git Bash Here</strong>，输入命令安装hexo：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装之后，继续输入命令进行初始化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>然后依次输入下列命令完成静态部署</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo c </span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在最后输入的   <strong>hexo s</strong>  后，会出现一个网址，将这个网址复制下来进行访问</p><p><img src="https://img-blog.csdnimg.cn/43449fae51eb4697b50aed6672ec2a09.png" alt="在这里插入图片描述"></p><p>最后如果出现如下图所示的页面，那么我们的博客就已经搭建成功啦！</p><p><img src="https://img-blog.csdnimg.cn/db49247b557a4033b340c70120493169.png" alt="在这里插入图片描述"></p><p>到此为止，我们的博客已经搭建完成，其基本功能就已经可以实现，但是看起来并不美观，我们接下来还需要应用主题，来美化我们的博客。</p><h2 id="四、安装butterfly主题"><a href="#四、安装butterfly主题" class="headerlink" title="四、安装butterfly主题"></a>四、安装butterfly主题</h2><p>接下来我以butterfly主题为例来安装主题</p><p>首先在myblog文件夹右键依旧选择<strong>Git Bash Here</strong>来输入指令克隆主题,同时我们需要下载pug和stylus渲染器，如果不下载的话后面将无法运行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git clone -b master <span class="attr">https</span>:<span class="comment">//github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span></span><br><span class="line"></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后我们找到文件夹 <strong>myblog中的_config.yml文件</strong>，通过搜索找到themes，然后将theme改为butterfly </p><p><img src="https://img-blog.csdnimg.cn/827c10bcaf2d4b8a9d2027b08e70d439.png" alt="在这里插入图片描述"><br>在_config.yml文件最后添加一段内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy</span>:</span><br><span class="line">  <span class="attr">type</span>: git </span><br><span class="line">  <span class="attr">repo</span>: git@github.<span class="property">com</span>:****<span class="comment">/****.github.io.git        #*****是你的用户名</span></span><br><span class="line"><span class="comment">  branch: main</span></span><br></pre></td></tr></table></figure><p>然后我们来安装git部署插件，同样在myblog文件夹右键，输入指令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>最后我们输入命令   <strong>hexo d</strong>  就可以将butterfly主题部署到我们的Github中，后续我们还可以对其进一步进行美化。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Web中关于sqli-labs和upload-labs靶场的搭建教程</title>
      <link href="/2023/02/11/Web%E4%B8%AD%E5%85%B3%E4%BA%8Esqli-labs%E5%92%8Cupload-labs%E9%9D%B6%E5%9C%BA%E7%9A%84%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
      <url>/2023/02/11/Web%E4%B8%AD%E5%85%B3%E4%BA%8Esqli-labs%E5%92%8Cupload-labs%E9%9D%B6%E5%9C%BA%E7%9A%84%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Web中关于sqli-labs和upload-labs靶场的搭建教程"><a href="#Web中关于sqli-labs和upload-labs靶场的搭建教程" class="headerlink" title="Web中关于sqli-labs和upload-labs靶场的搭建教程"></a>Web中关于sqli-labs和upload-labs靶场的搭建教程</h1><h2 id="①下载Windows版phpstudy"><a href="#①下载Windows版phpstudy" class="headerlink" title="①下载Windows版phpstudy"></a>①下载Windows版phpstudy</h2><p>首先我们需要下载一个phpstudy用来搭建这两个靶场环境，我下载的版本是v8.1版本的，大家可以根据自己的需要自行下载。</p><p><strong>下载链接</strong>：<a href="https://www.xp.cn/download.html">https://www.xp.cn/download.html</a></p><h2 id="②搭建upload-labs靶场环境"><a href="#②搭建upload-labs靶场环境" class="headerlink" title="②搭建upload-labs靶场环境"></a>②搭建upload-labs靶场环境</h2><p>下载upload-labs靶场环境的第一步，是需要将upload-labs的源代码进行下载。</p><p><strong>下载链接</strong>：<a href="https://codeload.github.com/c0ny1/upload-labs/zip/refs/heads/master">https://codeload.github.com/c0ny1/upload-labs/zip/refs/heads/master</a></p><p>下载之后，大家找到自己下载下来的压缩包，解压后将文件夹放在<strong>phpstudy</strong>文件夹中的<strong>WWW</strong>文件夹中</p><p><img src="https://img-blog.csdnimg.cn/671f40c56ee44cf59b11b5795661dced.png" alt="下载靶场源码放置的文件夹"><br>然后将靶场源码的文件夹名改成upload-labs</p><p>之后打开phpstudy后将<strong>首页</strong>中的<strong>前三个套件</strong>启动</p><p><img src="https://img-blog.csdnimg.cn/dfc07dd9157641899c3a5e4f80ee01c5.png" alt="在这里插入图片描述"><br>然后继续点击<strong>网站</strong>，点击<strong>创建网站</strong>，具体信息填写如下图</p><p><img src="https://img-blog.csdnimg.cn/9090a2989c8d47a39c4104b8de225aeb.png" alt="在这里插入图片描述"><br>接下来进行最后一步就可以完成靶场的搭建了！！</p><p>最后我们在网页中输入网址：<a href="http://127.0.0.1/upload-labs/">http://127.0.0.1/upload-labs/</a></p><p>如果出现如下图的页面，那么我们的upload-labs靶场就搭建成功啦！</p><p><img src="https://img-blog.csdnimg.cn/afec25bb504d4aa5a7579dbeff9abf9d.png" alt="在这里插入图片描述"></p><p>完成这些之后，下面我们就可以开始搭建sqli-labs靶场了，步骤与upload-labs基本一样。</p><h2 id="③搭建sqli-labs靶场环境"><a href="#③搭建sqli-labs靶场环境" class="headerlink" title="③搭建sqli-labs靶场环境"></a>③搭建sqli-labs靶场环境</h2><p>首先我们依旧要下载<strong>sqli-labs源代码</strong></p><p>下载网址：<a href="https://gitcode.net/mirrors/audi-1/sqli-labs/-/archive/master/sqli-labs-master.zip">https://gitcode.net/mirrors/audi-1/sqli-labs/-/archive/master/sqli-labs-master.zip</a></p><p>然后我们依然需要将压缩包进行解压，然后同样将文件夹放在<strong>phpstudy</strong>文件夹中的<strong>WWW</strong>文件夹中。</p><p>这次文件夹就不需要进行修改名称啦。</p><p>然后我们在sqli-labs文件夹中进行搜索<strong>“db”</strong>这个关键词，找到如下图第一个这个文件，我们需要对这个文件进行一个小小的修改。</p><p><img src="https://img-blog.csdnimg.cn/78ac162457d74524b39ca5c255634d43.png" alt="在这里插入图片描述"><br>我们可以用Vscode打开，将**$dbpass<strong>修改为</strong>root**，修改之后不要忘了Ctrl+s进行保存哦！！</p><p><img src="https://img-blog.csdnimg.cn/2f5dfe3d4bb34b478355a230a295b440.png" alt="在这里插入图片描述"></p><p>修改完之后我们继续像上一个靶场的搭建一样打开<strong>phpstudy</strong>，将<strong>首页</strong>中的<strong>前三个套件</strong>启动。</p><p><img src="https://img-blog.csdnimg.cn/7edce796b8a44942bb66ee010f4a6106.png" alt="在这里插入图片描述"></p><p>然后我们点击<strong>网站</strong>，点击<strong>创建网站</strong>，具体信息填写如下图</p><p><img src="https://img-blog.csdnimg.cn/6c9056466f65485fbd04d7b3c1d45235.png" alt="在这里插入图片描述"></p><p>最后我们在网页中输入网址：<a href="http://127.0.0.1/sqli-labs-master/">http://127.0.0.1/sqli-labs-master/</a></p><p>如果出现一下页面，那么我们的两个靶场就已经搭建成功啦！！</p><p><img src="https://img-blog.csdnimg.cn/12113e377c724fcd9a0019239f95cbf0.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
